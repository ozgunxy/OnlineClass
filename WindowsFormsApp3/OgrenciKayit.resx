<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>52</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHUAAAAyCAYAAABiWZRoAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAH6SURBVHhe7ZytjgJRDEb30REIBAKBQCAQCASCByBB8AAI
        BAKBQCAQCAQC0c0pcyc74Ucu0+Y7yU3I8CPmTNs7k5YfE+mQ1IRIakIkNSGSmhBJTchHqff73bbbrc3n
        c5tMJjYYDKzT6Wh9YXHucTCbzWyz2djtdqssPfNW6n6/9x9CKGIPh4NdLpfqXfHfcO5xsNvtbLFYuBvk
        vuJJKlcAX5pOp3a9Xqujom188tSQygdHo9HbK0C0DzLqeDxuZNGGVMxLaDxIy9TbQi0V44SyiMlyubT1
        eu2vXSq7XAqvamhccEjpPJ/PD6mkXFKviA2RSsS6VO592CqL2JxOJ49WlzocDj1sRWxIwd1u9yG11+t9
        fEIh4sDTJ5fKC5EDSU2IpCZEUhMiqQmR1IRIakIkNSGSmhBJTYikJkRSEyKpCZHUhEhqQiQ1IZKakFoq
        LRC0Qoj41FJpD9WcTA5qqTRx08wtYkPzIE2ELrX0i4rYlP5tl0rqxbDqamxK/7ZLhdVq5UvEpAyHQy2V
        KGVy6ng8VkdEFJiBItOW3u1aKlBoy5CNiAFCCUbGGQsNqUCkIraMxYn2Qv0kQv8KhSepQCpmN8wVwI5K
        I47tgRRb6icbo1fjMi+lFrgC2CL3+32/qdX6/mLuqfy5yjs+ShUxkdSESGpCJDUhkpoOs1/5Fm2L+uSX
        DQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>